{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport yelp from \"../api/yelp\";\nexport default (function () {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('what');\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'portland'\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            setErrorMessage('Something Went Wrong');\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  useEffect(function () {\n    searchApi('pasta');\n  }, []);\n  return [searchApi, results, errorMessage];\n});","map":{"version":3,"sources":["/Users/patrickrademacher/REACT/react-native/Udemy/food/src/hooks/useResults.js"],"names":["useEffect","useState","yelp","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","console","log","get","params","limit","term","location","response","data","businesses"],"mappings":";;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP;AAEA,gBAAe,YAAM;AAAA,kBAEaD,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAEVE,OAFU;AAAA,MAEDC,UAFC;;AAAA,mBAGuBH,QAAQ,CAAC,EAAD,CAH/B;AAAA;AAAA,MAGVI,YAHU;AAAA,MAGIC,eAHJ;;AAOjB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AADc;AAAA;AAAA,6CAGSR,IAAI,CAACS,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJC,gBAAAA,IAAI,EAAEN,UAFF;AAGJO,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CAHT;;AAAA;AAGRC,YAAAA,QAHQ;AAUdZ,YAAAA,UAAU,CAACY,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AAVc;AAAA;;AAAA;AAAA;AAAA;AAYVZ,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeAN,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,SAAS,CAAC,OAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACA,SAAD,EAAYJ,OAAZ,EAAqBE,YAArB,CAAP;AAEH,CA5BD","sourcesContent":["import {useEffect, useState} from 'react';\nimport yelp from '../api/yelp';\n\nexport default () => {\n    \n    const [results, setResults] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    \n\n    const searchApi = async (searchTerm) => {\n        console.log('what')\n        try {\n        const response = await yelp.get('/search', {\n            params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'portland'\n            }\n        });\n        setResults(response.data.businesses);\n        }  catch (err) {\n            setErrorMessage('Something Went Wrong');\n        }\n    }\n    useEffect(() => {\n        searchApi('pasta');\n    }, []);\n\n    return [searchApi, results, errorMessage];\n\n}"]},"metadata":{},"sourceType":"module"}