{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/patrickrademacher/REACT/react-native/Udemy/food/src/screens/SearchScreen.js\";\n\nimport React, { useState, useErf } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SearchBar from \"../components/SearchBar\";\nimport yelp from \"../api/yelp\";\n\nvar SearchScreen = function SearchScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'portland'\n              }\n            }));\n\n          case 3:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            setErrorMessage('Something Went Wrong');\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: function onTermSubmit() {\n      return searchApi;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, errorMessage), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }\n  }, \"We have found \", results.length, \" results\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }\n  }, results[0]));\n};\n\nvar styles = StyleSheet.create({\n  searchBarStyle: {\n    backgroundColor: '#f0eeee'\n  }\n});\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/patrickrademacher/REACT/react-native/Udemy/food/src/screens/SearchScreen.js"],"names":["React","useState","useErf","SearchBar","yelp","SearchScreen","props","term","setTerm","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","get","params","limit","location","response","data","businesses","length","styles","StyleSheet","create","searchBarStyle","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,kBACJL,QAAQ,CAAC,IAAD,CADJ;AAAA;AAAA,MACrBM,IADqB;AAAA,MACfC,OADe;;AAAA,mBAEEP,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,MAErBQ,OAFqB;AAAA,MAEZC,UAFY;;AAAA,mBAGYT,QAAQ,CAAC,EAAD,CAHpB;AAAA;AAAA,MAGrBU,YAHqB;AAAA,MAGPC,eAHO;;AAI5B,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESV,IAAI,CAACW,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJV,gBAAAA,IAAI,EAAEO,UAFF;AAGJI,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CAFT;;AAAA;AAERC,YAAAA,QAFQ;AASdT,YAAAA,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AATc;AAAA;;AAAA;AAAA;AAAA;AAWVT,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAXU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAeA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,SAAD;AACK,IAAA,IAAI,EAAEL,IADX;AAEK,IAAA,YAAY,EAAEC,OAFnB;AAGK,IAAA,YAAY,EAAE;AAAA,aAAMK,SAAN;AAAA,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAKG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,YAAP,CALH,EAMG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBF,OAAO,CAACa,MAA7B,aANH,EAOG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOb,OAAO,CAAC,CAAD,CAAd,CAPH,CADJ;AAWH,CA9BD;;AAgCA,IAAMc,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,cAAc,EAAE;AACZC,IAAAA,eAAe,EAAE;AADL;AADa,CAAlB,CAAf;AAMA,eAAetB,YAAf","sourcesContent":["import React, {useState, useErf} from 'react';\nimport {View, Text, StyleSheet, FlatList} from 'react-native';\nimport SearchBar from '../components/SearchBar';\nimport yelp from '../api/yelp';\nconst SearchScreen = (props) => {\n    const [term, setTerm] = useState(null);\n    const [results, setResults] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    const searchApi = async (searchTerm) => {\n        try {\n        const response = await yelp.get('/search', {\n            params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'portland'\n            }\n        });\n        setResults(response.data.businesses);\n        }  catch (err) {\n            setErrorMessage('Something Went Wrong');\n        }\n    }\n\n    return (\n        <View>\n           <SearchBar \n                term={term} \n                onTermChange={setTerm}\n                onTermSubmit={() => searchApi}/>\n           <Text>{errorMessage}</Text>\n           <Text>We have found {results.length} results</Text>\n           <Text>{results[0]}</Text>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    searchBarStyle: {\n        backgroundColor: '#f0eeee'\n    }\n})\n\nexport default SearchScreen;"]},"metadata":{},"sourceType":"module"}