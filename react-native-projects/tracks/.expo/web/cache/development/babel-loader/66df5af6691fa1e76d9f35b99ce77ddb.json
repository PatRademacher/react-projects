{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/patrickrademacher/REACT/react-native/Udemy/tracks/src/screens/SignupScreen.js\";\n\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Input, Button } from 'react-native-elements';\nimport Spacer from \"../components/Spacer\";\nimport { Context as AuthContext } from \"../context/AuthContext\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthContext),\n      state = _useContext.state,\n      signup = _useContext.signup;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  console.log(state);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    h3: true,\n    style: styles.margBot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, \"Sign Up for Tracker\")), React.createElement(Input, {\n    label: \"Email\",\n    onChangeText: setEmail,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    label: \"Password\",\n    onChangeText: setPassword,\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), state.errorMessage ? React.createElement(Text, {\n    style: styles.errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 35\n    }\n  }, state.errorMessage) : null, React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Sign Up\",\n    onPress: function onPress() {\n      return signup({\n        email: email,\n        password: password\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })));\n};\n\nSignupScreen.navigationOptions = function () {\n  return {\n    headerShown: false\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    borderColor: 'red',\n    borderWidth: 10,\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'turquoise'\n  },\n  margBot: {\n    marginBottom: 250\n  },\n  errorMessage: {\n    fontSize: 16,\n    color: 'red',\n    marginLeft: 15,\n    marginTop: 15\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["/Users/patrickrademacher/REACT/react-native/Udemy/tracks/src/screens/SignupScreen.js"],"names":["React","useState","useContext","Text","Input","Button","Spacer","Context","AuthContext","SignupScreen","navigation","state","signup","email","setEmail","password","setPassword","console","log","styles","container","margBot","errorMessage","navigationOptions","headerShown","StyleSheet","create","borderColor","borderWidth","flex","justifyContent","backgroundColor","marginBottom","fontSize","color","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from 'react';\nimport {View, StyleSheet} from 'react-native';\nimport {Text, Input, Button} from 'react-native-elements';\nimport Spacer from '../components/Spacer';\nimport {Context as AuthContext} from '../context/AuthContext';\n\nconst SignupScreen = ({navigation}) => {\n    const {state, signup} = useContext(AuthContext);\n    const [email, setEmail]= useState('');\n    const [password, setPassword] = useState('');\n    console.log(state);\n    return (\n        \n        <View style={styles.container}>\n            <Spacer>\n                <Text h3 style={styles.margBot}>Sign Up for Tracker</Text>\n            </Spacer>\n            <Input label=\"Email\"\n                   \n                   onChangeText={setEmail}\n                   autoCapitalize=\"none\"\n                   autoCorrect={false}/>\n            <Spacer />\n            <Input label=\"Password\" \n                    \n                    onChangeText={setPassword}\n                    autoCapitalize=\"none\"\n                    autoCorrect={false}\n                    secureTextEntry/>\n            {state.errorMessage ? <Text style={styles.errorMessage}>{state.errorMessage}</Text> : null}\n            <Spacer>\n                <Button title=\"Sign Up\" onPress={() => signup({email,password})}/>\n            </Spacer>\n        </View>\n        \n    );\n}\n\nSignupScreen.navigationOptions = () => {\n\treturn{\n\t\theaderShown: false,\n\t\t};\n\t};\n\nconst styles = StyleSheet.create({\n    container: {\n        borderColor: 'red',\n        borderWidth: 10,\n        flex: 1,\n        justifyContent: 'center',\n        backgroundColor: 'turquoise'\n    },\n    margBot:{\n        marginBottom: 250\n    },\n    errorMessage: {\n        fontSize: 16,\n        color: 'red',\n        marginLeft: 15,\n        marginTop: 15\n    }\n});\n\nexport default SignupScreen;"]},"metadata":{},"sourceType":"module"}